name: Release Package Version
on:
  push:
    tags:
     - 2.*     
jobs:  
    unit_tests:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        - name: Setup .NET Core
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: | 
              3.1.402
              6.0.x
        - name: Install dependencies
          run: dotnet restore

        - name: Build
          run: |
            dotnet build --configuration Release --no-restore
        
        - name: Unit Tests
          run: |
            dotnet test --no-restore --verbosity normal --filter "Category!=Acceptance"        
            
    acceptance_tests:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Setup .NET Core
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: |
              3.1.402
              6.0.x
        - name: Install dependencies
          run: dotnet restore

        - name: Build
          run: |
            dotnet build --configuration Release --no-restore        

        - name: Prune databases
          working-directory: ./tools/CosmosTestHelper
          env:
            CosmosConnectionString: ${{ secrets.COSMOS_INTEGRATION_TEST_CONNECTION_STRING }}
          run: dotnet run

        - name: Test Functions
          env:
            CosmosConnectionString: ${{ secrets.COSMOS_INTEGRATION_TEST_CONNECTION_STRING }}
          run: |
            dotnet test --no-restore --verbosity normal --filter "Category=Acceptance&Type!=Container"

        - name: Prune databases
          working-directory: ./tools/CosmosTestHelper
          env:
            CosmosConnectionString: ${{ secrets.COSMOS_INTEGRATION_TEST_CONNECTION_STRING }}
          run: dotnet run

        - name: Test Container Creation
          env:
            CosmosConnectionString: ${{ secrets.COSMOS_INTEGRATION_TEST_CONNECTION_STRING }}
          run: |
            dotnet test --no-restore --verbosity normal --filter "Category=Acceptance&Type=Container"

    deploy:
      needs:
        - acceptance_tests
        - unit_tests
      if: github.event.base_ref == 'refs/heads/main'
      runs-on: ubuntu-latest
      steps:    

      - name: Print Tag Ref
        run: echo $GITHUB_REF

      - name: Extract Version Number
        uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ github.ref }}
          regex: '([pre0-9.-]+)$'

      - name: Print Version Number
        run: echo '${{ steps.regex-match.outputs.match }}'

      - uses: actions/checkout@v2
      - name: Setup .NET  
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: | 
            3.1.402
            6.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: |
          dotnet build --configuration Release --no-restore

      - name: Pack Microsoft.Azure.CosmosRepository
        run: |
          dotnet pack ./src/Microsoft.Azure.CosmosRepository/Microsoft.Azure.CosmosRepository.csproj --output packages

      - name: Pack Microsoft.Azure.CosmosRepository.AspNetCore
        run: |
          dotnet pack ./src/Microsoft.Azure.CosmosRepository.AspNetCore/Microsoft.Azure.CosmosRepository.AspNetCore.csproj --output packages

      - name: Publish Package
        run: |
          nuget push **\*.nupkg -NoSymbols -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_API_KEY}}

      - name: Upload Package
        uses: actions/upload-artifact@v2
        with:
          name: IEvangelist.Azure.CosmosRepository.V${{ steps.regex-match.outputs.match }}
          path: packages/

